/*
 * BallPositionTask.cpp
 *
 *  Created on: Dec 3, 2018
 *      Author: aaron
 */

#include "BallPositionTask.h"
#include "share.h"

BallPositionTask::BallPositionTask (const char* a_name,
			unsigned portBASE_TYPE a_priority,
			size_t a_stack_size,
			emstream* p_ser_dev)
		: TaskBase(a_name, a_priority, a_stack_size, p_ser_dev)
{
}

void BallPositionTask::run(void) {
	static TickType_t xLastWakeTime = xTaskGetTickCount ();
    char adc_buff[30]; //buffer for printing out adc reading
    uint8_t spi_buff[3];
	spi_buff[2] = '\0';
    uint32_t adc_reading = 0;
    HAL_StatusTypeDef result;
	/*Task LOOP code here */

	for (;;) {

	    HAL_ADC_Start(&hadc3);

		if (HAL_ADC_PollForConversion(&hadc3, 1000000) == HAL_OK)
		{
		  adc_reading = HAL_ADC_GetValue(&hadc3);
//          sprintf(adc_buff, "**%"PRIu32"\r\n", adc_reading);
		}
		else //trying to debug this step...
		{
		  sprintf(adc_buff, "POOP IT NOT WORK\r\n");
		}
//		HAL_UART_Transmit(&huart2, (uint8_t*)adc_buff, strlen(adc_buff), 0xFFFF);

		delay_from_for_ms(xLastWakeTime, 10);
	}
}
